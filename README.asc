= Microservices Lab  (RWX)

== TODO: 
 * app that loads places from FB
 * lets people manage accounts
 * lets people attach photos to places 
 * what's required to get Neo4j running on PCF? 
 
4 sessions of 90 mins each:
 
1. Introductions and 101s
  * Why Are You Here?
  * "Boot" Camp
  * Cloud Foundry Camp
  
2. What Happens when we take this example to the cloud?
  * Why Aren't We Done? 
  * CD + scale
  * what are we building 
  * what will hurt (distributed system, failures, split brain w/ large datasets, orchestration of provisioning, integration)
  * Spring Cloud + CF
  * introduce: SC distributed + versioned configuration
  * introduce: refreshable configuration 
  * introduce: distributed (AMQP-bus powered) refreshable configuration 
  * service registration & discoverability with eureka

3. Reliability 
  * monitoring
  * auto-scaling using Adrian Colyer's RabbitMQ demo 
  * circuit breakers and Hystrix and so on 
  * hamster (the turbine aggregator - like logreggator for hystrix streams)

4. Service Consumption
  * API gateway support (w/ Zuul) 
  * web UI (w/ a gateway)
  * mobule UI (w/ a gateway)
  * reactor
  * security and SSO? 
 
 Revised Outline (Josh will clean up):
 
 Introductions and 101s
Why Are You Here? 20 min (Matt)
"Boot" Camp - start.spring.io, psvm, java -jar, starters, single table/class-based web service (Josh) 35 min
Cloud Foundry Camp - push it, put the table in a bound service, scale it, kill it (watch it rise), logs, monitoring stuff (Matt) 35 min
More Stuff
Configurationâ€¦ (Josh) 45 
Polyglot Persistence / Data (Matt) 45
Even More Stuff
Registration / Discovery (Josh) 45
Fault Tolerance (Matt) 45
Last but not least more stuff
Security (Josh) 45
API gateway / integration / clients / reactive/ concurrency (Matt) 45

